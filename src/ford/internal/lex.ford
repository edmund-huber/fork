#  libfork, a base library for the Fork language
#  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2014, 2015
#
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at http://mozilla.org/MPL/2.0/.
#  Exhibit B is not attached; this software is compatible with the
#  licenses expressed under Section 1.12 of the MPL v2.


module lex


import ast
import err
import io
import parser
import utils


alias Lineno struct(
  filename ptr uint8,
  lineno,pos uintptr
)

decl func linenoClone(line ptr Lineno) ptr Lineno
decl func linenoFree(line ptr Lineno)
decl func linenoNew(file ptr uint8, line,pos uintptr) ptr Lineno

decl func lineMake(lexl ptr Lineno) ast:Line

decl func issueFromLexError(err ptr err:Error, lineno ptr Lineno) ptr parser:Issue

alias StringTok struct(
  str ptr uint8,
  begin,end,line uintptr
)

alias Lexer struct (
  file ptr io:Stream,
  lineno ptr Lineno,
  error ptr err:Error,
  saved ptr StringTok,
  peek uint8,
  newline, firstLineTok, firstLineLetter bool
)

alias Token struct (
  type uint16,
  endPos uintptr,
  value uintptr,
  lineno ptr Lineno
)


decl func lexerClose(lex ptr Lexer)
decl func lexerEof(lex ptr Lexer) bool
decl func lexerError(lex ptr Lexer) ptr err:Error
decl func lexerFromStream(stream ptr io:Stream, name ptr uint8, err ptr ptr err:Error) ptr Lexer
decl func lexerNew(name ptr uint8, err ptr ptr err:Error) ptr Lexer
decl func lexerNext(lex ptr Lexer) ptr Token

decl func tokenFree(tok ptr Token)
decl func tokenNew(type uint16, value uintptr, line ptr Lineno, end uintptr) ptr Token
decl func tokenStr(tok ptr Token) ptr uint8

decl func ttypeStr(tt uint16) ptr uint8

decl func error(line ptr Lineno, msg ptr uint8) ptr parser:Issue
decl func errorMism(line ptr Lineno, got ptr uint8, expected ptr uint8) ptr parser:Issue
decl func errorLex(lex ptr Lexer, msg ptr uint8) ptr err:Error

decl func tokExtractBegin(tok ptr Token) ast:Line
decl func tokExtractEnd(tok ptr Token) ast:Line

decl func tokDiscardEnd(tok ptr Token) ast:Line
decl func tokDiscardBegin(tok ptr Token) ast:Line
