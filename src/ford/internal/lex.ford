#  libfork, a base library for the Fork language
#  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2014, 2015
#
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at http://mozilla.org/MPL/2.0/.
#  Exhibit B is not attached; this software is compatible with the
#  licenses expressed under Section 1.12 of the MPL v2.

module lex

import base
import err
import io
import utils


alias Lineno struct(
  filename ptr uint8,
  lineno,pos uintptr
)

decl linenoClone func(line ptr Lineno) ptr Lineno
decl linenoFree func(line ptr Lineno)
decl linenoNew func(file ptr uint8, line,pos uintptr) ptr Lineno

decl lineMake func(lexl ptr Lineno) utils:Line

decl issueFromLexError func(err ptr err:Error, lineno ptr Lineno) ptr utils:Issue

alias StringTok struct(
  str ptr uint8,
  begin,end,line uintptr
)

alias Lexer struct (
  file ptr io:Stream,
  lineno ptr Lineno,
  error ptr err:Error,
  saved ptr StringTok,
  peek uint8,
  newline, firstLineTok, firstLineLetter bool
)

alias Token struct (
  type uint16,
  endPos uintptr,
  value uintptr,
  lineno ptr Lineno
)


decl lexerClose func(lex ptr Lexer)
decl lexerEof func(lex ptr Lexer) bool
decl lexerError func(lex ptr Lexer) ptr err:Error
decl lexerFromStream func(stream ptr io:Stream, name ptr uint8, err ptr ptr err:Error) ptr Lexer
decl lexerNew func(name ptr uint8, err ptr ptr err:Error) ptr Lexer
decl lexerNext func(lex ptr Lexer) ptr Token

decl tokenFree func(tok ptr Token)
decl tokenNew func(type uint16, value uintptr, line ptr Lineno, end uintptr) ptr Token
decl tokenStr func(tok ptr Token) ptr uint8

decl ttypeStr func(tt uint16) ptr uint8

decl error func(line ptr Lineno, msg ptr uint8) ptr utils:Issue
decl errorMism func(line ptr Lineno, got ptr uint8, expected ptr uint8) ptr utils:Issue
decl errorLex func(lex ptr Lexer, msg ptr uint8) ptr err:Error

decl tokExtractBegin func(tok ptr Token) utils:Line
decl tokExtractEnd func(tok ptr Token) utils:Line

decl tokDiscardEnd func(tok ptr Token) utils:Line
decl tokDiscardBegin func(tok ptr Token) utils:Line


decl EOF uint16
decl NEWLINE uint16
decl ALIAS uint16
decl AMPER uint16
decl AND uint16
decl APOS uint16
decl ASSIGN uint16
decl BREAK uint16
decl CAST uint16
decl CBRAC uint16
decl COLON uint16
decl COMMA uint16
decl CONTINUE uint16
decl CPAR uint16
decl DEC uint16
decl DECL uint16
decl DIFFERENT uint16
decl DIV uint16
decl ELSE uint16
decl ENDENTRY uint16
decl ENDFUNC uint16
decl ENDIF uint16
decl ENDWHILE uint16
decl ENTRY uint16
decl EQUAL uint16
decl FALSE uint16
decl FATARROW uint16
decl FUNC uint16
decl ID uint16
decl IF uint16
decl IMPORT uint16
decl INC uint16
decl MAJEQ uint16
decl MAJOR uint16
decl MINEQ uint16
decl MINOR uint16
decl MINUS uint16
decl MOD uint16
decl MODULE uint16
decl MUT uint16
decl NOT uint16
decl NULLPTR uint16
decl NUMBER uint16
decl OBRAC uint16
decl OPAR uint16
decl OR uint16
decl PIPE uint16
decl PLUS uint16
decl POW uint16
decl PTR uint16
decl RETURN uint16
decl SEPARATOR uint16
decl SIZE uint16
decl STRING uint16
decl STRUCT uint16
decl TIMES uint16
decl TRUE uint16
decl TWOCOLONS uint16
decl UMINUS uint16
decl VAL uint16
decl WHILE uint16
decl XOR uint16
