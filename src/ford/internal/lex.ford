#  libfork, a base library for the Fork language
#  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2014, 2015
#
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at http://mozilla.org/MPL/2.0/.
#  Exhibit B is not attached; this software is compatible with the
#  licenses expressed under Section 1.12 of the MPL v2.


module lex


import ast
import err
import io
import parser
import utils


alias Lineno struct(
  filename ptr uint8,
  lineno,pos uintptr
)

decl linenoClone func(line ptr Lineno) ptr Lineno
decl linenoFree func(line ptr Lineno)
decl linenoNew func(file ptr uint8, line,pos uintptr) ptr Lineno

decl lineMake func(lexl ptr Lineno) ast:Line

decl issueFromLexError func(err ptr err:Error, lineno ptr Lineno) ptr parser:Issue

alias StringTok struct(
  str ptr uint8,
  begin,end,line uintptr
)

alias Lexer struct (
  file ptr io:Stream,
  lineno ptr Lineno,
  error ptr err:Error,
  saved ptr StringTok,
  peek uint8,
  newline, firstLineTok, firstLineLetter bool
)

alias Token struct (
  type uint16,
  endPos uintptr,
  value uintptr,
  lineno ptr Lineno
)


decl lexerClose func(lex ptr Lexer)
decl lexerEof func(lex ptr Lexer) bool
decl lexerError func(lex ptr Lexer) ptr err:Error
decl lexerFromStream func(stream ptr io:Stream, name ptr uint8, err ptr ptr err:Error) ptr Lexer
decl lexerNew func(name ptr uint8, err ptr ptr err:Error) ptr Lexer
decl lexerNext func(lex ptr Lexer) ptr Token

decl tokenFree func(tok ptr Token)
decl tokenNew func(type uint16, value uintptr, line ptr Lineno, end uintptr) ptr Token
decl tokenStr func(tok ptr Token) ptr uint8

decl ttypeStr func(tt uint16) ptr uint8

decl error func(line ptr Lineno, msg ptr uint8) ptr parser:Issue
decl errorMism func(line ptr Lineno, got ptr uint8, expected ptr uint8) ptr parser:Issue
decl errorLex func(lex ptr Lexer, msg ptr uint8) ptr err:Error

decl tokExtractBegin func(tok ptr Token) ast:Line
decl tokExtractEnd func(tok ptr Token) ast:Line

decl tokDiscardEnd func(tok ptr Token) ast:Line
decl tokDiscardBegin func(tok ptr Token) ast:Line
