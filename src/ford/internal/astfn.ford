#  libfork, a base library for the Fork language
#  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2015
#
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at http://mozilla.org/MPL/2.0/.
#  Exhibit B is not attached; this software is compatible with the
#  licenses expressed under Section 1.12 of the MPL v2.


module astfn


import ast
import kv
import lex
import list
import map
import mem


decl func psymbolNew(name ptr uint8, type ptr ast:PType) ptr ast:PSymbol

decl func ptypeNew(name,moduleName ptr uint8, descr ptr ast:PTypeDescr) ptr ast:PType

decl func ptypeDescrNew(ptype uint16, retPType ptr ast:PType, params ptr list:List) ptr ast:PTypeDescr
decl func ptypeDescrNewLoc(innerPType ptr ast:PType, length uintptr) ptr ast:PTypeDescr

decl func symbolClone(sym ptr ast:Symbol) ptr ast:Symbol
decl func symbolFree(sym ptr ast:Symbol)
decl func symbolNew(name ptr uint8, type ptr ast:Type) ptr ast:Symbol

decl func builtinSetNew() ptr map:Map

decl func typeClone(pool ptr mem:FreePool, type ptr ast:Type) ptr ast:Type
decl func typeNewFunc(pool ptr mem:FreePool, moduleName, name ptr uint8, retVal ptr ast:Type, members ptr kv:KVList) ptr ast:Type
decl func typeNewLoc(pool ptr mem:FreePool, moduleName, name ptr uint8, itemCount uintptr, retVal ptr ast:Type) ptr ast:Type
decl func typeNewPtr(pool ptr mem:FreePool, moduleName, name ptr uint8, retVal ptr ast:Type) ptr ast:Type
decl func typeNewRecursiveAlias(pool ptr mem:FreePool, moduleName, name ptr uint8) ptr ast:Type
decl func typeNewStruct(pool ptr mem:FreePool, moduleName, name ptr uint8, members ptr kv:KVList) ptr ast:Type
decl func typeSetAlias(type ptr ast:Type, moduleName, name ptr uint8)
decl func typeSetBoundaries(type ptr ast:Type, begin,end ast:Line)


decl func declInfoFree(declInfo ptr ast:DeclInfo)
decl func declInfoNew(declType uint16, type ptr ast:Type) ptr ast:DeclInfo


decl func strdefFree(strdef ptr ast:StringDef)
decl func strdefNew(name ptr uint8, begin,end ast:Line) ptr ast:StringDef


decl func pnodeAppendChild(parent ptr ast:PNode, child ptr ast:PNode) ptr ast:PNode
decl func pnodeNew(ptype uint16, value uintptr) ptr ast:PNode

decl func pblockNew() ptr ast:PBlock

decl func pdeclNew(ptype uint16, sym ptr ast:PSymbol, isDecl bool) ptr ast:PDecl

decl func pexprNew(tok ptr lex:Token, lhs,rhs ptr ast:PExpr, begin,end ast:Line) ptr ast:PExpr
decl func pexprNewTernary(tok ptr lex:Token, lhs,mid,rhs ptr ast:PExpr, begin,end ast:Line) ptr ast:PExpr
decl func pexprNewSingle(tok ptr lex:Token) ptr ast:PExpr

decl func prootNew(modName ptr ast:StringDef, imports ptr list:List, fileName ptr uint8) ptr ast:PRoot
