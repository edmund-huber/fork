#  libfork, a base library for the Fork language
#  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2014, 2015
#
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at http://mozilla.org/MPL/2.0/.
#  Exhibit B is not attached; this software is compatible with the
#  licenses expressed under Section 1.12 of the MPL v2.


module hash


import list
import pair
import vect


alias hashfn ptr func(item data) uintptr


alias Hash struct(
  buckets ptr vect:Vect,
  hf hashfn,
  len uintptr,
  freeKey,freeVal ptr func(item data)
)


alias HashIter struct (
  hash ptr Hash,
  curBucket ptr list:List,
  buckIndex,pos uintptr,
  end bool
)


alias HashNum uintptr

decl func hnNum(hn ptr HashNum, n uintptr) HashNum
decl func hnString(hn ptr HashNum, str ptr uint8) HashNum


alias Entry struct(
  hash uintptr,
  key,value data
)


# hash init/deinit functions

decl func deinit(hash ptr Hash)
decl func free(hash ptr Hash)
decl func new(cap uintptr, hf hashfn) ptr Hash
decl func init(hash ptr Hash, cap uintptr, hf hashfn) ptr Hash

decl func strinit(hash ptr Hash, cap uintptr) ptr Hash
decl func strnew(cap uintptr) ptr Hash


# hash methods

decl method Hash.clone() ptr Hash
decl method Hash.contains(key data) bool
decl method Hash.get(key data) data
decl method Hash.len() uintptr
decl method Hash.print()
decl method Hash.put(key data, value data)
decl method Hash.remove(key data) bool
decl method Hash.setFreeFuncs(freeKey,freeVal ptr func(item data))


# hashiter functions

decl func hashiterStart(hash ptr Hash) ptr HashIter
decl func hashiterNext(hash ptr HashIter) ptr pair:Pair
decl func hashiterFree(hash ptr HashIter)
