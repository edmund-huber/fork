#  libfork, a base library for the Fork language
#  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2015
#
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at http://mozilla.org/MPL/2.0/.
#  Exhibit B is not attached; this software is compatible with the
#  licenses expressed under Section 1.12 of the MPL v2.


module map


import pair
import sort


# map structures
alias Node struct (
  left, right ptr Node,
  key, value data,
  color bool,
  cmp sort:comparator
)


decl func nodeMkpair(node ptr Node) ptr pair:Pair
decl func nodeMinpair(node ptr Node) ptr pair:Pair


alias Map struct (
  root ptr Node,
  len uintptr,
  cmp sort:comparator,
  freeKey,freeVal ptr func(item data)
)


alias Iter struct (
  map ptr Map,
  lastKey data,
  begin bool
)


# map init/deinit functions

decl func deinit(map ptr Map)
decl func free(map ptr Map)
decl func init(map ptr Map, cmp sort:comparator) ptr Map
decl func new(cmp sort:comparator) ptr Map

decl func strinit(map ptr Map) ptr Map
decl func strnew() ptr Map


# map methods

decl method Map.contains(key data) bool
decl method Map.first() ptr pair:Pair
decl method Map.get(key data) data
decl method Map.iter() ptr Iter
decl method Map.len() uintptr
decl method Map.setFreeFuncs(freeKey,freeVal ptr func(item data))
decl method Map.put(key data, value data) data
decl method Map.remove(key data) bool


# iter methods

decl method Iter.next() ptr pair:Pair


# iter functions

decl func iterFree(map ptr Iter)
