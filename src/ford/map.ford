#  libfork, a base library for the Fork language
#  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2015
#
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at http://mozilla.org/MPL/2.0/.
#  Exhibit B is not attached; this software is compatible with the
#  licenses expressed under Section 1.12 of the MPL v2.


module map


import base
import pair


# map structures
alias Mnode struct (
  left, right ptr Mnode,
  key, value data,
  color bool,
  freewhat uint8,
  cmp base:comparator
)


alias Map struct (
  root ptr Mnode,
  len uintptr,
  cmp base:comparator
)


alias MapIter struct (
  map ptr Map,
  lastKey data,
  begin bool
)


# map functions
decl mapContains func(map ptr Map, key data) bool
decl mapDeinit func(map ptr Map)
decl mapDeinitSpec func(map ptr Map, freeKey ptr func(item data), freeVal ptr func(item data))
decl mapFirst func(map ptr Map) ptr pair:Pair
decl mapFree func(map ptr Map)
decl mapFreeSpec func(map ptr Map, freeKey ptr func(item data), freeVal ptr func(item data))
decl mapGet func(map ptr Map, key data, value ptr data) bool
decl mapInit func(map ptr Map, cmp base:comparator) ptr Map
decl mapLen func(map ptr Map) uintptr
decl mapNew func(cmp base:comparator) ptr Map
decl mapPut func(map ptr Map, key data, value data, freewhat uint8) data
decl mapRemove func(map ptr Map, key data) bool


# string map helpers
decl strmapInit func(map ptr Map) ptr Map
decl strmapNew func() ptr Map


# mapiter functions

decl mapiterStart func(map ptr Map) ptr MapIter
decl mapiterNext func(map ptr MapIter) ptr pair:Pair
decl mapiterFree func(map ptr MapIter)


# map values
decl FREE_NONE uint8
decl FREE_KEY uint8
decl FREE_VALUE uint8
