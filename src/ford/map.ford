#  libfork, a base library for the Fork language
#  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2015
#
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at http://mozilla.org/MPL/2.0/.
#  Exhibit B is not attached; this software is compatible with the
#  licenses expressed under Section 1.12 of the MPL v2.


module map


import pair
import sort


# map structures
alias Mnode struct (
  left, right ptr Mnode,
  key, value data,
  color bool,
  freewhat uint8,
  cmp sort:comparator
)


decl func nodeMkpair(node ptr Mnode) ptr pair:Pair
decl func nodeMinpair(node ptr Mnode) ptr pair:Pair


alias Map struct (
  root ptr Mnode,
  len uintptr,
  cmp sort:comparator
)


alias MapIter struct (
  map ptr Map,
  lastKey data,
  begin bool
)


# map functions
decl func mapContains(map ptr Map, key data) bool
decl func mapDeinit(map ptr Map)
decl func mapDeinitSpec(map ptr Map, freeKey ptr func(item data), freeVal ptr func(item data))
decl func mapFirst(map ptr Map) ptr pair:Pair
decl func mapFree(map ptr Map)
decl func mapFreeSpec(map ptr Map, freeKey ptr func(item data), freeVal ptr func(item data))
decl func mapGet(map ptr Map, key data, value ptr data) bool
decl func mapInit(map ptr Map, cmp sort:comparator) ptr Map
decl func mapLen(map ptr Map) uintptr
decl func mapNew(cmp sort:comparator) ptr Map
decl func mapPut(map ptr Map, key data, value data, freewhat uint8) data
decl func mapRemove(map ptr Map, key data) bool


# string map helpers
decl func strmapInit(map ptr Map) ptr Map
decl func strmapNew() ptr Map


# mapiter functions

decl func mapiterStart(map ptr Map) ptr MapIter
decl func mapiterNext(map ptr MapIter) ptr pair:Pair
decl func mapiterFree(map ptr MapIter)


# map values
decl mut FREE_NONE uint8
decl mut FREE_KEY uint8
decl mut FREE_VALUE uint8
