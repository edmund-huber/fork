#  libfork, a base library for the Fork language
#  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2014, 2015
#
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at http://mozilla.org/MPL/2.0/.
#  Exhibit B is not attached; this software is compatible with the
#  licenses expressed under Section 1.12 of the MPL v2.


module list


# list structures
alias Lnode struct(
  prec, next ptr Lnode,
  value uintptr
)


alias List struct(
  start, end ptr Lnode,
  len uintptr,

  current ptr Lnode,
  pos uintptr
)


# list init/deinit
decl func deinit(list ptr List)
decl func deinitAll(list ptr List, freeFunc ptr func(item data))
decl func free(list ptr List)
decl func freeAll(list ptr List, freeFunc ptr func(item data))
decl func init(list ptr List) ptr List
decl func new() ptr List


# lists functions

decl method List.add(index uintptr, item data) intptr
decl method List.addInt(pos uintptr, value uintptr) intptr
decl method List.append(item data) intptr
decl method List.appendInt(value uintptr) intptr
decl method List.extract(start uintptr, len intptr) ptr List
decl method List.freeContents(freeFunc ptr func(item data))
decl method List.get(pos uintptr) ptr data
decl method List.getInt(pos uintptr) ptr uintptr
decl method List.insert(index uintptr, item data) intptr
decl method List.insertInt(pos uintptr, value uintptr) intptr
decl method List.len() uintptr
decl method List.pop() data
decl method List.popInt() uintptr
decl method List.print()
decl method List.prune()
decl method List.push(item data)
decl method List.pushInt(value uintptr)
decl method List.remove(item uintptr, freefunc ptr func(item data)) bool
decl method List.seek(pos uintptr)
decl method List.seekZero()
decl method List.shallowCopy() ptr List
