#  libfork, a base library for the Fork language
#  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2015
#
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at http://mozilla.org/MPL/2.0/.
#  Exhibit B is not attached; this software is compatible with the
#  licenses expressed under Section 1.12 of the MPL v2.


module fs


import err
import io
import list


alias File struct(
  name,path ptr uint8,
  isDir bool,
  length uint64
)

decl func stat(path ptr uint8) {file ptr File, err ptr err:Error}

decl func fileFree(file ptr File)

decl method File.isDir() bool
decl method File.len() uint64
decl method File.open() {stream ptr io:Stream, err ptr err:Error}
decl method File.openDir() {dir ptr Dir, err ptr err:Error}
decl method File.path() ptr uint8


alias Dir struct(
  absPath,name ptr uint8,
  internal data
)


decl func dir(name ptr uint8) {dir ptr Dir, err ptr err:Error}
decl func dirClose(dir ptr Dir)

decl method Dir.next() {file ptr File, err ptr err:Error}


# File stream functions
decl func fileCreate(name ptr uint8) {stream ptr io:Stream, err ptr err:Error}
decl func fileOpen(name ptr uint8) {stream ptr io:Stream, err ptr err:Error}

# path functions
decl func pathAbsolute(relPath ptr uint8) ptr uint8
decl func pathBasename(path ptr uint8) ptr uint8
decl func pathContains(path,filename ptr uint8) bool
decl func pathExists(path ptr uint8) bool
decl func pathExistsDir(path ptr uint8) bool
decl func pathJoin(path1,path2 ptr uint8) ptr uint8
decl func pathListFiles(path ptr uint8) {paths ptr list:List, err ptr err:Error}

# line number structure

alias Lineno struct(
  filename ptr uint8,
  lineno,pos uintptr
)


decl func linenoClone(line ptr Lineno) ptr Lineno
decl func linenoFree(line ptr Lineno)
decl func linenoNew(file ptr uint8, line,pos uintptr) ptr Lineno
