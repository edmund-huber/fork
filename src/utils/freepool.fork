#  Second Step - Experimental Fork Compiler
#  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2014
#
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at http://mozilla.org/MPL/2.0/.
#  Exhibit B is not attached; this software is compatible with the
#  licenses expressed under Section 1.12 of the MPL v2.

import spring
import utils

func fpAlloc(fp ptr utils:FreePool, len uintptr) data
  mut ret = spring:alloc(len)
  spring:listAppend(fp'ptrs, ret)

  return ret
/func

func fpFree(fp ptr utils:FreePool)
  if fp != null
    spring:listFreeAll(fp'ptrs, fp'freeFunc)
    spring:free(fp)
  /if
/func

func fpNew(freeFunc ptr func(item data)) ptr utils:FreePool
  mut ret = cast<ptr utils:FreePool>(spring:alloc(size(utils:FreePool)))
  ret'ptrs = spring:listNew()
  ret'freeFunc = freeFunc

  return ret
/func

func fpZAlloc(fp ptr utils:FreePool, len uintptr) data
  mut ret = spring:zalloc(len)
  spring:listAppend(fp'ptrs, ret)

  return ret
/func
