#  Second Step - Experimental Helm Compiler
#  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2014
#
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at http://mozilla.org/MPL/2.0/.
#  Exhibit B is not attached; this software is compatible with the 
#  licenses expressed under Section 1.12 of the MPL v2. 

module synt

import lex
import spring
import utils

alias Parser struct(
  filename ptr uint8,
  err ptr spring:Error
)

alias PNode struct(
  type uint16,
  value uintptr,
  parent ptr PNode,
  leaves ptr spring:Vector
)

alias PProgram struct(
  node PNode,
  moduleName ptr uint8,
  imports ptr spring:Vector
)

decl TYPE_FUNC   uint16
decl TYPE_NUM    uint16
decl TYPE_PTR    uint16
decl TYPE_STRUCT uint16

alias Type struct (
  refc utils:Ref,
  name, moduleName ptr uint8,
  # anonymous because of first-step parser limitations; actually a TypeDescr
  descr data
)

alias TypeDescr struct (
  refc utils:Ref,
  type uint16,
  # if type is TYPE_PTR, this is the type returned by dereferencing.
  # if type is TYPE_FUNC, this is the return type of the function
  retType ptr Type,
  # if type is TYPE_FUNC, this is the arguments list
  # if type is TYPE_STRUCT, this is the fields list
  arguments ptr spring:List
)

decl typeFree func(ptr Type)
decl typeNew func(ptr uint8, ptr uint8, ptr TypeDescr) ptr Type

decl typeDescrFree func(ptr TypeDescr)
decl typeDescrNew func(uint16, ptr Type, ptr spring:List) ptr TypeDescr

alias Symbol struct (
  name ptr uint8,
  type ptr Type
)

decl symbolFree func(ptr Symbol)
decl symbolNew func(ptr uint8, ptr Type) ptr Symbol

alias Alias Symbol

decl aliasFree ptr func(ptr Alias)
decl aliasNew ptr func(ptr uint8, ptr Type) ptr Alias

alias PDecl struct(
  node PNode,
  name ptr uint8,
  type ptr Type
)

decl parserFree func(ptr Parser)
decl parserNew func(ptr uint8) ptr Parser
decl parserParse func(ptr Parser) ptr PNode

decl pnodeFree func(ptr PNode)

decl PROGRAM  uint16
decl ENTRY    uint16
decl FUNCTION uint16
decl ALIAS    uint16
decl DECL     uint16
decl VAR      uint16

