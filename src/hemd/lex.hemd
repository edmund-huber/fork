#  Second Step - Experimental Helm Compiler
#  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2014
#
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at http://mozilla.org/MPL/2.0/.
#  Except B is not attached; this software is compatible with the 
#  licenses expressed under Section 1.12 of the MPL v2. 

module lex

import spring

alias Lexer struct (
  file ptr spring:Stream,
  line uintptr,
  pos uintptr,
  error ptr spring:Error,
  filename ptr uint8,
  stateVar uint8,
  saved ptr uint8,
  peek uint8,
  newline bool
)

alias Token struct (
  type uint8,
  beginPos, endPos uintptr,
  lineno uintptr,
  value uintptr
)

decl lexerClose func(ptr Lexer)
decl lexerEof func(ptr Lexer) bool
decl lexerError func(ptr Lexer) ptr spring:Error
decl lexerFromStream func(ptr spring:Stream, ptr uint8, ptr ptr spring:Error) ptr Lexer
decl lexerNew func(ptr uint8, ptr ptr spring:Error) ptr Lexer
decl lexerNext func(ptr Lexer) ptr Token

decl tokenFree func(ptr Token)
decl tokenNew func(uint8, uintptr, uintptr, uintptr, uintptr) ptr Token

decl LEX_EOF uint8
