#  ctrans, Fork to C transpiler
#  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2015
#
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at http://mozilla.org/MPL/2.0/.
#  Exhibit B is not attached; this software is compatible with the
#  licenses expressed under Section 1.12 of the MPL v2.


import ast
import backend
import err
import mem
import proc
import txt


func findCC(opt data, buf ptr uint8, len uintptr) ptr uint8

  mut CC = proc:getenv("CC")

  if CC == null
    CC = "cc"
  /if

  txt:strncpy(buf, CC, len)
/func


func preprocess(itn data, code ptr ast:PRoot, opts backend:POpts) backend:PRes
  mut pres backend:PRes
  pres'success = true
  pres'errors = null
  pres'output = cast<ptr uint8>(mem:zalloc(1))

  return pres
/func


func compile(itn data, code ptr ast:PRoot, opts backend:COpts) backend:CRes

/func


func destroy(itn data)

/func


func exelink(itn data, files ptr ptr uint8, opts backend:LOpts) backend:LRes

/func


func solink(itn data, files ptr ptr uint8, opts backend:LOpts) backend:LRes

/func


func backendInit(opt data, error ptr ptr err:Error) ptr backend:Backend
  mut buf [512] uint8

  mut cc = findCC(opt, ptr buf[0], 512)

  return backend:bkNew(null, ptr preprocess, ptr compile, ptr destroy, ptr exelink, ptr solink)
/func
