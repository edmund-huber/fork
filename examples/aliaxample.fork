#  Second Step - Experimental Fork Compiler
#  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2014
#
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at http://mozilla.org/MPL/2.0/.
#  Exhibit B is not attached; this software is compatible with the
#  licenses expressed under Section 1.12 of the MPL v2.

import ast
import ctx
import sema
import spring
import synt
import utils

entry
  mut argv = spring:args()
  if argv'len != 1
    spring:errln("Wrong number of arguments, required: 1")
    spring:exit(1)
  /if

  mut ctx = ctx:contextNew()
  mut ast ptr ast:PNode
  mut errors = sema:semaParse(ctx, argv'args[0], ptr ast)

  mut errLen = spring:listLen(errors)

  if errLen > 0
    mut i uintptr = 0

    while i < errLen
      mut issue = cast<ptr utils:Issue>(val spring:listGet(errors, i))

      utils:issueWriteOut(issue, ptr spring:out)

      i++
    /while
    
    spring:listFree(errors)
    spring:exit(1)
  /if

  spring:listFree(errors)

  mut iter = spring:mapiterStart(cast<ptr ast:PRoot>(ast)'aliases'syms)

  mut pair ptr spring:Pair

  while (pair = spring:mapiterNext(iter)) != null
    ast:declDump("alias", cast<ptr uint8>(pair'key), cast<ptr ast:Type>(pair'value))
  /while

  spring:mapiterFree(iter)

  ctx:contextFree(ctx)

  ast:pnodeFree(ast)
/entry
