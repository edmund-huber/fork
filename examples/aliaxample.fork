#  libfork, a base library for the Fork language
#  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2014
#
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at http://mozilla.org/MPL/2.0/.
#  Exhibit B is not attached; this software is compatible with the
#  licenses expressed under Section 1.12 of the MPL v2.


import ast
import base
import ctx
import map
import pair
import proc
import sema
import synt
import tty
import utils


entry
  mut argv = proc:args()
  if argv'len != 1
    tty:errln("Wrong number of arguments, required: 1")
    proc:exit(1)
  /if

  mut ctx = ctx:contextNew()
  mut ast ptr ast:PNode
  mut errors = sema:semaParse(ctx, argv'args[0], ptr ast)

  mut errLen = base:listLen(errors)

  if errLen > 0
    mut i uintptr = 0

    while i < errLen
      mut issue = cast<ptr utils:Issue>(val base:listGet(errors, i))

      utils:issueWriteOut(issue, ptr tty:out)

      i++
    /while

    base:listFree(errors)
    proc:exit(1)
  /if

  base:listFree(errors)

  mut iter = map:mapiterStart(cast<ptr ast:PRoot>(ast)'aliases'syms)

  mut pair ptr pair:Pair

  while (pair = map:mapiterNext(iter)) != null
    ast:declDump("alias", cast<ptr uint8>(pair'key), cast<ptr ast:Type>(pair'value))
  /while

  map:mapiterFree(iter)

  ctx:contextFree(ctx)

  ast:pnodeFree(ast)
/entry
