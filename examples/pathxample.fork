#  libfork, a base library for the Fork language
#  Copyright (C) Marco Cilloni <marco.cilloni@yahoo.com> 2015
#
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at http://mozilla.org/MPL/2.0/.
#  Exhibit B is not attached; this software is compatible with the
#  licenses expressed under Section 1.12 of the MPL v2.


import err
import fs
import proc
import tty


func pad(p uintptr)
  mut i uintptr = 0

  while i < p
    tty:out(" ")

    i++
  /while
/func


func dirDump(dir ptr fs:Dir, p uintptr) ptr err:Error
  tty:out(dir'name)
  tty:outln(" {")

  while true
    mut res = dir.next()
    if res'err?
      return res'err
    /if

    if not res'file?
      break
    /if

    pad(p + 2)
    if res'file.isDir()
      mut res2 = res'file.openDir()

      fs:fileFree(res'file)

      if res2'err?
        return res2'err
      /if

      mut err = dirDump(res2'dir, p + 2)
      fs:dirClose(res2'dir)

      if err?
        return err
      /if
    else
      tty:outln(res'file'name)
      fs:fileFree(res'file)
    /if
  /while

  pad(p)
  tty:outln("}")

  return null
/func


entry
  mut arg = proc:args()

  if arg'len < 1
    tty:failln("No arguments given")
  /if

  mut res = fs:stat(arg'args[0])
  if res'err?
    tty:failln(res'err'msg)
  /if

  if not res'file.isDir()
    tty:failln("Argument is not a directory")
  /if

  mut res2 = res'file.openDir()
  fs:fileFree(res'file)

  if res2'err?
    tty:failln(res2'err'msg)
  /if

  mut err = dirDump(res2'dir, 0)

  if err?
    tty:failln(err'msg)
  /if

  fs:dirClose(res2'dir)
/entry
